"""
## [WIP] Authentication and Authorization directive

The `@auth` directive is used to check if a user is logged in and has
the necessary permissions to access the field.

https://www.graphql-tools.com/docs/schema-directives#enforcing-access-permissions
"""
directive @auth on FIELD_DEFINITION

enum SocialProvider {
  GOOGLE
  FACEBOOK
}

input EmailLoginInput {
  email: String!
  password: String!
}

input SocialLoginInput {
  provider: SocialProvider!
  token: String!
}

input PasswordResetInput {
  password: String!
  token: String!
}

type Mutation {
  requestPasswordReset(email: String!): RequestResponse!
  requestDeleteAccount: RequestResponse! @auth
  requestEmailOTP: RequestResponse! @auth
  registerWithEmail(input: CreateUserInput!): AuthFormMutationResponse!
  loginWithEmail(input: EmailLoginInput!): AuthFormMutationResponse!
  loginWithSocialProvider(input: SocialLoginInput!): AuthMutationResponse!
  resetPassword(input: PasswordResetInput!): AuthFormMutationResponse!
  deleteAccount(token: String!): AuthMutationResponse!
  logout: AuthMutationResponse!
}

type AuthFormMutationResponse implements Response & FormErrors {
  code: ID!
  success: Boolean!
  message: String!
  errors: [FieldError!]
  idToken: String
  accessToken: String
  refreshToken: String
}

type AuthMutationResponse implements Response {
  code: ID!
  success: Boolean!
  message: String!
  idToken: String
  accessToken: String
  refreshToken: String
}
