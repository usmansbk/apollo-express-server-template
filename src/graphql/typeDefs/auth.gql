type Mutation {
  loginWithEmailAndPassword(input: EmailLoginInput!): LoginMutationResponse!
  requestEmailOTP(email: String!): OTPMutationResponse!
  requestSmsOTP(phoneNumber: String!): OTPMutationResponse!
  loginWithOTP(code: String!): OTPMutationResponse!
  socialLogin(input: SocialLoginInput!): SocialLoginMutationResponse!
}

input EmailLoginInput {
  email: String!
  password: String!
}

enum SocialProvider {
  GOOGLE
  FACEBOOK
}

input SocialLoginInput {
  provider: SocialProvider!
  token: String!
}

type LoginMutationResponse implements MutationResponse & FormErrors {
  success: Boolean!
  message: String!
  errors: [FieldErrors]
  token: String
}

type OTPMutationResponse implements MutationResponse {
  success: Boolean!
  message: String!
  token: String
}

type SocialLoginMutationResponse implements MutationResponse {
  success: Boolean!
  message: String!
  token: String
}
