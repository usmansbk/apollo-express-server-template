version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@8.1.2
  aws-ecs: circleci/aws-ecs@2.3.0

jobs:
  test:
    docker:
      - image: cimg/node:16.15.1
      - image: cimg/postgres:14.0
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: user_pool_ci
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-
      - run:
          name: Install dependencies
          command: yarn --frozen-lockfile --cache-folder ~/.cache/yarn
      - save_cache:
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Create secrets folder
          command: mkdir certs
      - run:
          name: Generate JWT private key
          command: openssl genrsa -out certs/private.pem 2048
      - run:
          name: Generate JWT public key
          command: openssl rsa -in certs/private.pem -pubout -outform PEM -out certs/public.pem
      - run:
          name: Run tests
          command: yarn test
workflows:
  build_test_deploy:
    jobs:
      - test:
          context:
            - docker-hub-creds
          filters:
            branches:
              only:
                - release
                - staging
                - develop
      - aws-ecr/build-and-push-image:
          repo: $AWS_ECR_REPO
          tag: $CIRCLE_BRANCH
          dockerfile: Dockerfile.production
          public-registry: true
          context:
            - docker-hub-creds
            - aws-creds
          requires:
            - test
          filters:
            branches:
              only:
                - release
                - staging
      - aws-ecs/deploy-service-update:
          requires:
            - aws-ecr/build-and-push-image
          family: "${AWS_ECR_REPO}-service"
          cluster-name: "${AWS_ECR_REPO}-cluster"
          container-image-name-updates: "container=${AWS_ECR_REPO}-service,tag=${CIRCLE_SHA1}"
